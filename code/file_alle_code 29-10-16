#alle code in een file
#--------------------------------------------------------------------------------
#BASIS
cp ../sequenties_groep_14.fa .


#1 Download het rna.fa bestand van de Alligator sinensis.
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/Alligator_sinensis/RNA/rna.fa.gz

#2 Pak het gedownloade bestand uit.
gunzip rna.fa.gz 

#3 Maak er een database van.
formatdb -pF -i rna.fa 

#4 Blast elke sequentie in sequenties_groep_14.fa tegen de database en selecteert het XM_nummer van de best scorende alignment en zet deze in het bestand XM_nummers.
blastall -d rna.fa -i sequenties_groep_14.fa -p blastn -m9 | awk 'BEGIN{b=1}{if(substr($1,7,1)==b){print $1 "  " $2 "  "$NF;b+=1} else if (substr($1,6,2)==b){print $1 "  " $2 "  " $NF ; b+=1}}' | tr "|" " " | awk '{print $5}' > XM_nummers

#5 Alle unique XM nummers uit bestand XM_nummers worden in bestand enkele_xm_nummer gezet.
cat XM_nummers | sort | uniq > enkele_xm_nummers

#6 Download elke NCBI pagina van het gen wat hoort bij de XM_nummers en zet deze in bestand "ncbi_page_file".
cat enkele_xm_nummers | sed 's!\(.*\).*!http://www.ncbi.nlm.nih.gov/gene/?term=&!g'| wget -i- -q -O- > ncbi_page_file

#7 Uit het bestand ncbi_page_file worden alle regels genomen met <titel>.In deze regel staat alle informatie van de naam van het gen.
cat ncbi_page_file| egrep "<title>" > alle_titels

#8 Uit alle titel regels wordt de gennaam geselecteerd en in een bestand gezet.
cat alle_titels | awk '{print $1}' |  cut -b8-66 > alle_genen_op_naam

# DEZE MOET ANDERS!!! moet aan gen id gekoppeld worden.
#9 Zet bestand enkele_xm_nummers en alle_genen_op_naam naast elkaar neer in bestand Lijst_gen_code_en_naam.
pr -m -t -J enkele_xm_nummers alle_genen_op_naam  > Lijst_gen_code_en_naam

# DEZE MOET ANDERS!!! hoeven alleen xp nummer uit tekomen.
#10 In het bestand ncbi_page_file wordt gezocht op de accesion code voor het eiwit. Ook wordt er gezocht bij welk gen de eiwitten horen
cat ncbi_page_file|egrep -o "XP_[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].[0-9]|<title>.*"|awk '{print $1}' | tr -d "\<title\>" > test_klaar

#11 Uit bestand test_klaar worden alle enkele XP_nummers in bestand XP_nummers gezet.
cat test_klaar |egrep XP|sort|uniq > XP_nummers

#12 Geeft van alle XP_nummers de ncbi site. Op elke site wordt gezocht naar het bijbehorende eiwitnaam. De eiwit namen worden hiervan in een bestand gezet genaamd eiwit_namen.
cat XP_nummers | sed 's!\(.*\).*!http://www.ncbi.nlm.nih.gov/protein/?term=&!g'| wget -i- -q -O- | egrep "<title>" | awk -F"- " '{print $1}' | cut -d [ -f 1 | awk -v N=2 '{sep=""; for (i=N; i<=NF; i++) {printf("%s%s",sep,$i); sep=OFS}; printf("\n")}' > eiwit_namen

#13 Zet bestand XP_nummers en eiwit_namen naast elkaar neer in bestand Lijst_eiwit_code_en_naam.
pr -m -t -J XP_nummers eiwit_namen  > Lijst_eiwit_code_en_naam

#-----------------------------------------------------------------------------------
#EXONEN

#1 Download elke NCBI pagina van de exonen die horen bij het gen wat hoort bij de XM_nummers.
cat enkele_xm_nummers | sed 's!\(.*\).*!https://www.ncbi.nlm.nih.gov/gene/?term=&\&report=gene_table\&format=text!g'| wget -i- -q -O-> gen_table_files_ncbi

#2 Geeft van elke exon het start en stop locatie. Deze wordt gekoppeld aan een RNA accesion (XM nummer) en eiwit accesion (XP nummer). Alles wordt weggeschreven naar exonen_sven.
cat gen_table_files_ncbi|egrep "[0-9]-[0-9]|XM_[0-9]{9}|XP_[0-9]{8}|XR_[0-9]|GENE" |egrep exons -v|tr " " -d|awk '{print $1}'|egrep "<" -v| sed 's/Exon-table-for\-\-mRNA\-\-//g'| sed 's/\-and\-protein\-/\t/g' | awk 'BEGIN{B = "test"} {if(substr($0, 1, 1) == "X" || substr($0, 1, 1) == "E"){B = $0;} else {print($0 "\t" B);};}' > exonen_sven

#3 Alle XM nummers uit exonen_sven worden geselecteerd en naar XM_tabel_2 geschreven.
cat exonen_sven | awk '{print $2}' | sort | uniq | awk '{if(substr($0, 1, 1) != "E"){print $0}}' > XM_tabel_2

#4 Bij elka xm nummer uit XM_tabel_2 wordt op de ncbi pagina het bijbehorende gen id gezocht en weggeschreven naar files_ncbi_voor_genid.
cat XM_tabel_2 | sed 's!\(.*\).*!http://www.ncbi.nlm.nih.gov/gene/?term=&!g'| wget -i- -O- > files_ncbi_voor_genid

#5 Uit files_ncbi_voor_genid wordt  het GEN ID geselecteerd en in bestand alle_gen_id gezet.
cat files_ncbi_voor_genid |egrep "Gene ID: [0-9]{9}" -o >alle_gen_id

#6 De xm nummers uit XM_tabel_2 en de gen id´s uit alle_gen_id worden aan elkaar gekoppeld.
pr -m -t XM_tabel_2 alle_gen_id > xm_met_gen_id

#7 In het bestand exonen_sven wordt elk xm_nummer verandert met het bijbehorende gen id. 
sed -r 's/^(XM_[0-9]*\.[0-9])[\t ]*Gene ID: ([0-9]*)/sed -i "s{\1{\2{" exonen_sven/' xm_met_gen_id > alexanderShulginakawillem

#8
chmod +x alexanderShulginakawillem

#9
./alexanderShulginakawillem

#-----------------------------------------------------------------------------------
# INFO KEG , pathway, EC
# Eiwit aan ASN code koppelen.

#1 Er worden 3 files gedownload. De eerst heeft de keg code gekoppeld aan het eiwit accesion. De tweede heeft elke keg code gekoppeld aan een of meer EC. De laatste heeft elke keg code gekoppeld aan een of meer pathways.
wget -q -O ncbiID_test "http://rest.kegg.jp/conv/ncbi-proteinid/asn"
wget http://rest.kegg.jp/link/asn/enzyme -O ASN_code_met_EC
wget http://rest.kegg.jp/link/asn/pathway -O ASN_code_met_pathway

#2 Van alle xp nummers uit XP_nummers word het versie nummer er van af gehaald en in bestand XP_nummers_zonder_versie gezet. 
cat XP_nummers | awk -F"." '{print $1}' > XP_nummers_zonder_versie

#3 In het bestand ncbiID_test wordt gezocht met de xp nummers naar KEGG codes.
cat ncbiID_test | egrep -f XP_nummers_zonder_versie  > asn_id_GEKOPPELD_MET_XPnummer

#4 De eerste kolom van asn_id_GEKOPPELD_MET_XPnummer waar alle asn ids in staan worden geselecteerd en in alleen_asn_id gezet.
cat asn_id_GEKOPPELD_MET_XPnummer|awk '{print $1}'> alleen_asn_id

#5 Alle KEGG site van de asn ids worden gedownload en in  bestand alle_kegg_site gezet.
cat  alleen_asn_id |sed 's%.*%http://rest.kegg.jp/get/&%'| wget -i- -O- -q > alle_kegg_site

# PATHWAY
#6 In het bestand ASN_code_met_pathway wordt gezocht met de KEGG codes naar pathways.
cat ASN_code_met_pathway | egrep -f alleen_asn_id |sort | sed 's/path://g' > Pathway_met_ASN

#7 Pakt uit bestand Pathway_met_ASN de eerste kolom (alle pathways) en zet alle unieke in een bestand; alle_enkele_pathways.
cat Pathway_met_ASN |awk '{print $1}'|sort|uniq > alle_enkele_pathways

#8 Zoekt met de pathways in bestand alle_kegg_site en selecteert elke naam van een pathway.
cat alle_kegg_site | egrep -f alle_enkele_pathways |sed 's/PATHWAY//g'| sort|uniq| awk '{print $1 "@" $2 " "  $3 " " $4 " "$5 " " $6}'| tr "@" "\t" > pathwaycode_met_pathwaynaam

#EC code
#9 In het bestand ASN_code_met_pathway wordt gezocht met de KEGG codes naar EC´s.
cat ASN_code_met_EC | egrep -f alleen_asn_id |sort| sed 's/ec://g' > EC_code_met_ASN

#10 Zoekt in bestand alle_kegg_site naar alle EC nummers en zet deze in bestand alle_EC_nummers. Dit wordt gedaan door te zoek tussen "[" en "]" want hier zit het EC tussen.
cat alle_kegg_site | grep -o -P '(?<=\[).*(?=\])'|egrep "EC"|tr " " "\n"| tr -d "EC:" > alle_EC_nummers
 
#11 Het zelfde als bij 10 alleen word er gezocht op de reactie naam van de EC. Hierbij wordt gezocht tussen "K[0-9]{5}" en "[".
cat alle_kegg_site | grep -o -P '(?<=K[0-9]{5}).*(?=\[)'| tr "/" "\n"| awk '{if(substr($0,1,2)=="  "){print substr($0,3,length($0))}else if(substr($0,1,1)==" "){print substr($0,2,length($0))}   else{print $0}}' > alle_ec_namen

#12 weet ik niet
pr -m -t -J alle_EC_nummers alle_ec_namen  | sort -u -t\t -k1,1 > test_ec_naam

#------------------------------------------------------------------------------------
# Fylogenie

#1 eiwitten van de bioserver af halen
cat  Proteoom_01.fa Proteoom_04.fa Proteoom_05.fa Proteoom_06.fa Proteoom_08.fa Proteoom_09.fa Proteoom_10.fa Proteoom_11.fa  Proteoom_12.fa  Proteoom_13.fa  Proteoom_14.fa|tr "\n" " "| sed 's/>/\n>/g'|  egrep "cytochrome c-type heme lyase"

#2 tekst bestand met daarin de sequentie van het desbetreffende eiwit
cat Sequenties_E | egrep -A4 'XP_014374584' > XP_014374584.1

#3 BLASTen van de eerste 30 hits van de eiwitsequentie 
blastp -db nr -query XP_014374584.1 -remote -max_target_seqs 30 -outfmt 5 -out Blasttest

#4 eiwitsequenties en accession code van de sequenties uit het BLAST bestand halen
cat Blasttest | awk '/<Hit_accession>/{print}/<Hsp_hseq>/{print}' | sed ':again;$!N;$!b again; s/<[^>]*>//g' | tr -d ' ' | sed 's/^/>/;n' > tpE_XP_sequentie

#5 toevoegen van eigen eiwit aan de lijst met sequenties
cat XP_014374584.1 >> tpE_XP_sequentie 

#6 genereren van de fylogenetische boom met behulp van clustalW
clustalw -TYPE=PROTEIN -ALIGN -infile=tpE_XP_sequentie -outfile=tpe2boom.aln

#------------------------------------------------------------------------------------
# Eiwit sequentie

#1 ophalen van proteoom van het organisme
wget "ftp://ftp.ncbi.nlm.nih.gov/genomes/Alligator_sinensis/protein/protein.fa.gz" 

#2 gunzippen van het bestand
gunzip protein.fa.gz

#3 tekst bestand met de eiwit sequentie en accession code van onze eiwitten
cat protein.fa | tr -d '\n' | sed 's/>/\n&/g' | egrep -f XP_nummers | sed 's/]/&\n/g' > lijst_XPnummers_en_sequentie

#------------------------------------------------------------------------------------



